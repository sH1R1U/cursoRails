## Customize the test machine
machine:

  timezone:
    Chile/Santiago # Set the timezone

  # Version of ruby to use
  ruby:
    version:
      ruby 2.4.0p0

  # Override /etc/hosts
  hosts:
    circlehost: 127.0.0.1
    dev.curso.cl: 127.0.0.1

  # Add some environment variables
  environment:
    CIRCLE_ENV: development
    DATABASE_URL: postgres://ubuntu:@127.0.0.1:5432/cursoRails_development

## Customize checkout
checkout:
  post:
    - git submodule sync
    - git submodule update --init # use submodules

## Customize dependencies
dependencies:
  pre:
    - npm install coffeescript # install from a different package manager
    - gem uninstall bundler # use a custom version of bundler
    - gem install bundler --pre

  override:
    - bundle install: # note ':' here
        timeout: 180 # fail if command has no output for 3 minutes
        # IMPORTANT NOTE: ^^ the timeout modifier above must be
        # double indented (four spaces) from the previous line
  
  # we automatically cache and restore many dependencies between
  # builds. If you need to, you can add custom paths to cache:

## Customize database setup
database:
  override:
    # replace CircleCI's generated database.yml
    - cp config/database.yml.ci config/database.yml
    - bundle exec rake db:create db:schema:load

## Customize test commands
test:
  override:
    - phpunit test/unit-tests # use PHPunit for testing
  post:
    - bundle exec rake jasmine:ci: # add an extra test type
        environment:
          RAILS_ENV: test
          RACK_ENV: test

## Customize deployment commands
deployment:
  staging:
    branch: Alexis
    heroku:
      appname: cursoRails
